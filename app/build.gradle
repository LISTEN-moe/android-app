import org.jetbrains.kotlin.gradle.tasks.AbstractKotlinCompile

apply plugin: 'com.android.application'
apply plugin: 'com.mikepenz.aboutlibraries.plugin'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlinx-serialization'
apply plugin: 'com.apollographql.apollo3'

android {
    compileSdkVersion 32

    defaultConfig {
        applicationId 'me.echeung.moemoekyun'
        minSdkVersion 23
        targetSdkVersion 32
        versionCode 102
        versionName '5.5.2-beta.3'
    }

    buildFeatures {
        compose true
        dataBinding true
        viewBinding true

        // Disable unused AGP features
        aidl false
        renderScript false
        resValues false
        shaders false
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix ' DEBUG'
        }
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions 'variant'

    productFlavors {
        playstore {
            dimension 'variant'
        }
        fdroid {
            dimension 'variant'

            applicationIdSuffix '.fdroid'
        }
    }

    lint {
        abortOnError true
        disable 'MissingTranslation', 'ExtraTranslation'
        enable 'ObsoleteSdkInt'
    }

    packagingOptions {
        resources {
            excludes += [
                'META-INF/DEPENDENCIES',
                'LICENSE.txt',
                'META-INF/LICENSE',
                'META-INF/LICENSE.txt',
                'META-INF/NOTICE'
            ]
        }
    }

    dependenciesInfo {
        includeInApk = false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
}

dependencies {
    // Jetpack Compose
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.compose.ui:ui-util:$compose_version"
    implementation 'androidx.activity:activity-compose:1.5.0-alpha03'

    final coroutines_version = '1.6.0'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    implementation 'io.insert-koin:koin-android:3.1.4'

    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.2.0'
    implementation 'androidx.fragment:fragment-ktx:1.5.0-alpha04'
    implementation 'androidx.palette:palette-ktx:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.2.0-alpha01'

    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation 'com.github.tfcporciuncula:flow-preferences:1.3.4'

    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.6'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2'

    implementation "com.apollographql.apollo3:apollo-runtime:$apollo_version"
    implementation "com.apollographql.apollo3:apollo-http-cache:$apollo_version"

    final coil_version = '1.4.0'
    implementation "io.coil-kt:coil:$coil_version"
    implementation "io.coil-kt:coil-gif:$coil_version"

    implementation 'com.google.android.exoplayer:exoplayer-core:2.17.1'
    implementation 'androidx.media:media:1.6.0-beta01'

    implementation "com.mikepenz:aboutlibraries-core:$aboutlibs_version"
    implementation "com.mikepenz:aboutlibraries:$aboutlibs_version"

    implementation 'com.squareup.logcat:logcat:0.1'

    // For detecting memory leaks; see https://square.github.io/leakcanary/
//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.2'
}

apollo {
    useVersion2Compat()
}

buildscript {
    ext {
        kotlin_version = '1.6.10'
        compose_version = '1.1.1'
        apollo_version = '3.1.0'
        aboutlibs_version = '8.9.4'
    }
    repositories {
        mavenCentral()
        google()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath "com.apollographql.apollo3:apollo-gradle-plugin:$apollo_version"
        classpath "com.mikepenz.aboutlibraries.plugin:aboutlibraries-plugin:$aboutlibs_version"
    }
}

// See https://kotlinlang.org/docs/reference/experimental.html#experimental-status-of-experimental-api-markers
tasks.withType(AbstractKotlinCompile).all {
    kotlinOptions.freeCompilerArgs += [
            "-Xopt-in=kotlin.Experimental",
            "-Xopt-in=kotlin.RequiresOptIn",
            "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi",
            "-Xopt-in=kotlinx.coroutines.FlowPreview",
    ]
}

preBuild.dependsOn(formatKotlin)
